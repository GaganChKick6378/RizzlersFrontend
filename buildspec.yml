version: 0.2

env:
  variables:
    TERRAFORM_VERSION: 1.5.7
    NODE_VERSION: 18
    DEFAULT_ENVIRONMENT: dev
    TERRAFORM_STATE_BUCKET: rizzlers-ibe-dev-tfstate
    TERRAFORM_STATE_KEY: frontend/terraform.tfstate
    TERRAFORM_STATE_REGION: ap-south-1

phases:
  install:
    runtime-versions:
      nodejs: $NODE_VERSION
    commands:
      - echo Installing Terraform
      - rm -rf terraform/  # Clean up if exists
      - rm -f terraform
      - wget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - unzip -o -q terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - pip install --upgrade pip
      - pip install awscli --upgrade

  pre_build:
    commands:
      - echo Creating Terraform configuration
      - ENVIRONMENT=dev
      - mkdir -p terraform/environments/$ENVIRONMENT
      - |
        cat > terraform/environments/$ENVIRONMENT/main.tf << 'EOF'
        terraform {
          backend "s3" {
            bucket = "rizzlers-ibe-dev-tfstate"
            key    = "frontend/terraform.tfstate"
            region = "ap-south-1"
          }
        }

        provider "aws" {
          region = "ap-south-1"
        }

        # Reference existing S3 bucket instead of creating it
        data "aws_s3_bucket" "frontend" {
          bucket = "rizzlers-frontend-dev"
        }

        resource "aws_s3_bucket_public_access_block" "frontend" {
          bucket = data.aws_s3_bucket.frontend.id
          block_public_acls       = false
          block_public_policy     = false
          ignore_public_acls      = false
          restrict_public_buckets = false
        }

        resource "aws_s3_bucket_ownership_controls" "frontend" {
          bucket = data.aws_s3_bucket.frontend.id
          rule {
            object_ownership = "BucketOwnerPreferred"
          }
        }

        resource "aws_s3_bucket_acl" "frontend" {
          depends_on = [
            aws_s3_bucket_ownership_controls.frontend,
            aws_s3_bucket_public_access_block.frontend,
          ]
          bucket = data.aws_s3_bucket.frontend.id
          acl    = "public-read"
        }

        resource "aws_s3_bucket_website_configuration" "frontend" {
          bucket = data.aws_s3_bucket.frontend.id
          index_document {
            suffix = "index.html"
          }
          error_document {
            key = "index.html"
          }
        }

        resource "aws_cloudfront_distribution" "frontend" {
          enabled             = true
          is_ipv6_enabled     = true
          default_root_object = "index.html"
          comment             = "Rizzlers Frontend Distribution"
          price_class         = "PriceClass_200"
          wait_for_deployment = false

          origin {
            domain_name = aws_s3_bucket_website_configuration.frontend.website_endpoint
            origin_id   = "S3-${data.aws_s3_bucket.frontend.bucket}"

            custom_origin_config {
              http_port              = 80
              https_port             = 443
              origin_protocol_policy = "http-only"
              origin_ssl_protocols   = ["TLSv1.2"]
            }
          }

          default_cache_behavior {
            allowed_methods  = ["GET", "HEAD", "OPTIONS"]
            cached_methods   = ["GET", "HEAD"]
            target_origin_id = "S3-${data.aws_s3_bucket.frontend.bucket}"
            forwarded_values {
              query_string = false
              cookies {
                forward = "none"
              }
            }
            viewer_protocol_policy = "redirect-to-https"
            min_ttl                = 0
            default_ttl            = 3600
            max_ttl                = 86400
          }

          custom_error_response {
            error_code         = 403
            response_code      = 200
            response_page_path = "/index.html"
          }

          custom_error_response {
            error_code         = 404
            response_code      = 200
            response_page_path = "/index.html"
          }

          restrictions {
            geo_restriction {
              restriction_type = "none"
            }
          }

          viewer_certificate {
            cloudfront_default_certificate = true
          }

          tags = {
            Name = "Rizzlers-dev-cloudfront"
            Creator = "Rizzlers Team"
            Purpose = "IBE"
          }
        }

        output "s3_bucket_name" {
          value = data.aws_s3_bucket.frontend.bucket
        }

        output "cloudfront_distribution_id" {
          value = aws_cloudfront_distribution.frontend.id
        }

        output "cloudfront_domain_name" {
          value = aws_cloudfront_distribution.frontend.domain_name
        }

        output "s3_website_endpoint" {
          value = aws_s3_bucket_website_configuration.frontend.website_endpoint
        }
        EOF
      - cd terraform/environments/$ENVIRONMENT
      - terraform init -reconfigure

  build:
    commands:
      - terraform apply -auto-approve
      - export S3_BUCKET_NAME=$(terraform output -raw s3_bucket_name)
      - export CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
      - export CLOUDFRONT_DOMAIN_NAME=$(terraform output -raw cloudfront_domain_name)
      - cd ../../..  # Back to root
      - cd frontend  # Enter frontend directory
      - echo "Building the React application"
      - npm install
      - npm run build
      - aws s3 sync build/ s3://$S3_BUCKET_NAME/ --delete
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

  post_build:
    commands:
      - echo "Build complete"
      - echo "=============================================================="
      - echo "Your website is available at: https://$CLOUDFRONT_DOMAIN_NAME"
      - echo "=============================================================="

artifacts:
  files:
    - frontend/build/**/*
  base-directory: .
  discard-paths: no

cache:
  paths:
    - frontend/node_modules/**/*