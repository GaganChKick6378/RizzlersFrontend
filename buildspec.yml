version: 0.2

env:
  variables:
    TERRAFORM_VERSION: "1.5.7"
    NODE_VERSION: "18"
  parameter-store:
    AWS_ACCESS_KEY_ID: "/rizzlers/access_id"
    AWS_SECRET_ACCESS_KEY: "/rizzlers/secret_key"

phases:
  install:
    runtime-versions:
      nodejs: $NODE_VERSION
    commands:
      # Install Terraform
      - echo "Installing Terraform..."
      - wget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - unzip -q terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      # Install AWS CLI
      - pip install --upgrade pip
      - pip install awscli --upgrade

  pre_build:
    commands:
      # Determine environment based on branch
      - |
        if [ "$CODEBUILD_WEBHOOK_HEAD_REF" = "refs/heads/dev" ]; then
          ENVIRONMENT=dev
        elif [ "$CODEBUILD_WEBHOOK_HEAD_REF" = "refs/heads/qa" ]; then
          ENVIRONMENT=qa
        else
          echo "Branch not configured for deployment"
          exit 1
        fi
      - echo "Deploying to $ENVIRONMENT environment"
      
      # Set environment variables
      - export ENVIRONMENT=$ENVIRONMENT
      - cd terraform/environments/$ENVIRONMENT
      
      # Initialize Terraform
      - echo "Initializing Terraform..."
      - terraform init

  build:
    commands:
      # Apply Terraform
      - echo "Applying Terraform..."
      - terraform apply -auto-approve
      
      # Get S3 bucket name and CloudFront distribution ID from Terraform outputs
      - export S3_BUCKET_NAME=$(terraform output -raw s3_bucket_name)
      - export CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
      - echo "S3 Bucket: $S3_BUCKET_NAME"
      - echo "CloudFront Distribution: $CLOUDFRONT_DISTRIBUTION_ID"
      
      # Store outputs as environment variables for CodePipeline
      - echo "Writing bucket info to file for deployment stage..."
      - echo "$S3_BUCKET_NAME" > bucket-name.txt
      - echo "$CLOUDFRONT_DISTRIBUTION_ID" > cloudfront-id.txt
      
      # Build frontend
      - echo "Building frontend..."
      - cd ../../../frontend
      - npm ci
      - npm run build

  post_build:
    commands:
      - echo "Build complete!"
      - echo "S3 Bucket for deployment: $(cat ../bucket-name.txt)"
      - echo "CloudFront Distribution ID: $(cat ../cloudfront-id.txt)"
      - cp ../bucket-name.txt ../frontend/dist/
      - cp ../cloudfront-id.txt ../frontend/dist/

artifacts:
  files:
    - frontend/dist/**/*
    - bucket-name.txt
    - cloudfront-id.txt
  base-directory: '.'
  discard-paths: no

cache:
  paths:
    - 'frontend/node_modules/**/*' 