version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      # Install Terraform
      - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      - sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      - sudo apt-get update && sudo apt-get install terraform
      # Install Yarn
      - npm install -g yarn

  pre_build:
    commands:
      # Frontend Build
      - echo "Building Frontend Application"
      - cd frontend
      - yarn install
      - yarn build
      - cd ..
      # Save build output
      - mv frontend/build ./frontend-build

  build:
    commands:
      # Terraform Infrastructure Setup
      - echo "Setting up Infrastructure with Terraform"
      - cd terraform/frontend
      - terraform init
      - terraform workspace select ${ENVIRONMENT} || terraform workspace new ${ENVIRONMENT}
      - terraform plan -var="environment=${ENVIRONMENT}" -var="frontend_bucket_name=rizzlers-frontend" -out=tfplan
      - terraform apply -auto-approve tfplan
      - cd ../..

  post_build:
    commands:
      # Deploy Frontend to S3
      - echo "Deploying Frontend to S3"
      - |
        BUCKET_NAME="rizzlers-frontend-${ENVIRONMENT}"
        aws s3 sync frontend-build/ s3://$BUCKET_NAME/ --delete
      # Invalidate CloudFront
      - |
        DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?contains(Tags[?Key=='Environment'].Value, '${ENVIRONMENT}') && contains(Tags[?Key=='Name'].Value, 'rizzlers-frontend')].Id" --output text)
        if [ ! -z "$DISTRIBUTION_ID" ]; then
          echo "Invalidating CloudFront Distribution: $DISTRIBUTION_ID"
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        fi
      - echo "Deployment Complete!"

artifacts:
  files:
    - frontend-build/**/*
    - terraform/frontend/**/*
  name: deployment-output